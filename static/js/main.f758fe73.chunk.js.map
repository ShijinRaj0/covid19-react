{"version":3,"sources":["components/Counter.js","components/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","style","display","this","props","className","counterTitle","counterValue","width","progress","Component","Card","toggleDisplayState","new_display_state","state","is_active","setState","isActive","hint","state_data","data","test_positivity","parseInt","total","confirmed","tested","toFixed","onClick","background","color","title","toLocaleString","recovered","deceased","App","setStateCodes","state_meta","state_code","state_name","getDataFromAPI","fetch","method","mode","then","res","json","undefined","TT","india_data","statewise_data","console","log","BR","data_received","catch","error","cards","state_list","Object","entries","formated_data","forEach","item","s_meta","find","detail","f_data","push","getCardDetails","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f758fe73.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../card.css\";\r\nclass Counter extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{display:this.props.display}}>\r\n      <div className=\"progress-text-title\">{this.props.counterTitle}</div>\r\n      <div className=\"progress\">\r\n        <div className=\"progress-text\">\r\n          {this.props.counterValue} \r\n        </div>\r\n        <div className=\"progress-value\" style={{\r\n            width:this.props.progress\r\n        }}>\r\n\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Counter;\r\n","import React, { Component } from 'react'\r\nimport '../card.css';\r\nimport Counter from '../components/Counter'\r\nclass Card extends Component{\r\nconstructor(props){\r\n    super(props);\r\n    this.state={\r\n        display:\"none\",\r\n        hint:\"Click to view details\",\r\n        isActive:false,\r\n    }\r\n}\r\ntoggleDisplayState=()=>{\r\n    let new_display_state=(this.state.display===\"none\")?\"block\":\"none\";\r\n    let is_active=(new_display_state===\"none\")?false:true;\r\n    this.setState({display:new_display_state,isActive:is_active});\r\n}\r\n    render(){\r\n        const state_data=this.props.data;\r\n       // const recovery_perc = (parseInt(state_data.recovered)/parseInt(state_data.confirmed))*100;\r\n        //const death_perc = (parseInt(state_data.deceased)/parseInt(state_data.confirmed))*100;\r\n        const test_positivity = ((parseInt(state_data.total.confirmed)/parseInt(state_data.total.tested))*100).toFixed(2);\r\n        let hint;\r\n        if(this.state.isActive){\r\n            hint= '';\r\n        }\r\n        else hint=this.state.hint;\r\n\r\n        return (\r\n            <div className='card' onClick={this.toggleDisplayState} style={{background:this.state.color}}>\r\n                <h3>{this.props.title}</h3>\r\n                <p>{hint}</p>\r\n                <div style={{display:this.state.display}}>\r\n\r\n                {/* <Counter counterTitle=\"Population\" counterValue={parseInt(state_data.total.population).toLocaleString()} progress=\"100%\"/> */}\r\n                <Counter counterTitle=\"Tested\" counterValue={parseInt(state_data.total.tested).toLocaleString()} progress=\"100%\"/>\r\n                <Counter counterTitle=\"Confirmed\" counterValue={parseInt(state_data.total.confirmed).toLocaleString()} progress=\"100%\"/>\r\n                <Counter counterTitle=\"Positivity Rate\" counterValue={test_positivity+\"%\"} progress=\"100%\"/>\r\n                <Counter counterTitle=\"Recovered\" counterValue={parseInt(state_data.total.recovered).toLocaleString()} progress=\"100%\"/>\r\n                <Counter counterTitle=\"Deceased\" counterValue={parseInt(state_data.total.deceased).toLocaleString()} progress=\"100%\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from \"react\";\r\n//import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Card from './components/Card';\r\n// import CardButton from './components/CardButton';\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n    statewise_data:{},\r\n    india_data:{},\r\n    data_received:false,\r\n    state_meta:{},\r\n    };\r\n  }\r\n\r\n  setStateCodes=()=>{\r\n    let state_meta=[{state_code : 'TT', state_name : 'Total'},\r\n    {state_code : 'MH', state_name : 'Maharashtra'},\r\n    {state_code : 'KA', state_name : 'Karnataka'},\r\n    {state_code : 'AP', state_name : 'Andhra Pradesh'},\r\n    {state_code : 'TN', state_name : 'Tamil Nadu'},\r\n    {state_code : 'KL', state_name : 'Kerala'},\r\n    {state_code : 'DL', state_name : 'Delhi'},\r\n    {state_code : 'UP', state_name : 'Uttar Pradesh'},\r\n    {state_code : 'WB', state_name : 'West Bengal'},\r\n    {state_code : 'OR', state_name : 'Odisha'},\r\n    {state_code : 'RJ', state_name : 'Rajasthan'},\r\n    {state_code : 'TG', state_name : 'Telangana'},\r\n    {state_code : 'CT', state_name : 'Chhattisgarh'},\r\n    {state_code : 'HR', state_name : 'Haryana'},\r\n    {state_code : 'BR', state_name : 'Bihar'},\r\n    {state_code : 'GJ', state_name : 'Gujarat'},\r\n    {state_code : 'MP', state_name : 'Madhya Pradesh'},\r\n    {state_code : 'AS', state_name : 'Assam'},\r\n    {state_code : 'PB', state_name : 'Punjab'},\r\n    {state_code : 'JK', state_name : 'Jammu and Kashmir'},\r\n    {state_code : 'JH', state_name : 'Jharkhand'},\r\n    {state_code : 'UT', state_name : 'Uttarakhand'},\r\n    {state_code : 'HP', state_name : 'Himachal Pradesh'},\r\n    {state_code : 'GA', state_name : 'Goa'},\r\n    {state_code : 'PY', state_name : 'Puducherry'},\r\n    {state_code : 'TR', state_name : 'Tripura'},\r\n    {state_code : 'MN', state_name : 'Manipur'},\r\n    {state_code : 'CH', state_name : 'Chandigarh'},\r\n    {state_code : 'AR', state_name : 'Arunachal Pradesh'},\r\n    {state_code : 'ML', state_name : 'Meghalaya'},\r\n    {state_code : 'NL', state_name : 'Nagaland'},\r\n    {state_code : 'LA', state_name : 'Ladakh'},\r\n    {state_code : 'SK', state_name : 'Sikkim'},\r\n    {state_code : 'AN', state_name : 'Andaman and Nicobar Islands'},\r\n    {state_code : 'MZ', state_name : 'Mizoram'},\r\n    {state_code : 'DN', state_name : 'Dadra and Nagar Haveli and Daman and Diu'},\r\n    {state_code : 'UN', state_name : 'State Unassigned'},\r\n    {state_code : 'LD', state_name : 'Lakshadweep'}\r\n    ];\r\n    this.setState({state_meta:state_meta});\r\n  }\r\n  getDataFromAPI=()=>{\r\n    const api_url=\"https://api.covid19india.org/v4/data.json\";\r\n    fetch(api_url,{\r\n      method:'GET',\r\n      mode:'cors',\r\n    }).then(res=>{\r\n      return res.json();\r\n    }).then(data=>{\r\n      if(data.TT.total!==undefined)\r\n        {\r\n          this.setState({india_data:data.TT.total});\r\n        }\r\n      let state_data= data;\r\n      delete state_data.TT;\r\n      if(state_data!==undefined)\r\n      {\r\n        this.setState({statewise_data:state_data});\r\n      }\r\n        console.log(this.state.statewise_data);\r\n        console.log(this.state.statewise_data.BR);\r\n      this.setState({data_received:true});\r\n    }).catch(error=>{\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setStateCodes();\r\n    this.getDataFromAPI();\r\n  }\r\n\r\n  getCardDetails(){\r\n    var cards=[];\r\n    var state_list = Object.entries(this.state.statewise_data);\r\n    let formated_data=[];\r\n    state_list.forEach((item)=>{\r\n      let s_meta= this.state.state_meta.find( detail => {\r\n        return detail.state_code===item[0];\r\n      })\r\n      let f_data={\r\n        state_code:item[0],\r\n        data:item[1],\r\n        state_name:s_meta.state_name\r\n      }\r\n      cards.push(<Card key={f_data.state_code} data={f_data.data} title={f_data.state_name}/>);\r\n      formated_data.push(f_data);\r\n      console.log(f_data.data);\r\n    \r\n    });\r\n   return cards;\r\n  }\r\n\r\n  render() {\r\n    let cards;\r\n    if (this.state.data_received)\r\n      {\r\n        cards=this.getCardDetails();\r\n      }\r\n    else{\r\n      cards=(<h6>Loading...</h6>);\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <title>COVID-19 React</title>\r\n        <header>\r\n          <h1>COVID 19 TRACKER - INDIA</h1>\r\n        </header>\r\n        {cards}\r\n        <footer>\r\n          <h3>COVID 19 TRACKER PROJECT - SHIJIN RAJ 2021</h3>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}